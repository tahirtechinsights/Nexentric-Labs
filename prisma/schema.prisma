generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String  @id @default(cuid())
  email       String  @unique
  clerkUserId String  @unique
  firstName   String?
  lastName    String?
  imageUrl    String?
  jobTitle    String?
  xUrl        String?
  linkedInUrl String?

  // Add the bio relationship
  bio Bio?

  company     Company? @relation(fields: [companySlug], references: [slug])
  companySlug String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// New Bio model
model Bio {
  id String @id @default(cuid())

  about                String?
  totalYearsExperience Int?    @map("total_years_experience")
  skillsAndTools       String? @map("skills_and_tools") // Could also be Json type if you want structured data
  location             String?
  hourlyRate           Float?  @map("hourly_rate")

  // Relationship to User (one-to-one)
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("bios")
}

model Company {
  id   String @id @default(cuid())
  name String
  slug String @unique

  tagline     String?
  description String?

  phone   String?
  email   String?
  website String?

  staff    User[]
  services Service[]

  category   Category @relation(fields: [categoryId], references: [id])
  categoryId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Service {
  id          String  @id @default(cuid())
  name        String
  description String?

  company   Company? @relation(fields: [companyId], references: [id])
  companyId String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id          String  @id @default(cuid())
  name        String
  description String?

  companies Company[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
